// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Dotlan;
//
//    var systemData = SystemData.FromJson(jsonString);

namespace Dotlan
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SystemData
    {
        [JsonProperty("n", NullValueHandling = NullValueHandling.Ignore)]
        public long? N { get; set; }

        [JsonProperty("s", NullValueHandling = NullValueHandling.Ignore)]
        public string S { get; set; }

        [JsonProperty("sc", NullValueHandling = NullValueHandling.Ignore)]
        public string Sc { get; set; }

        [JsonProperty("o", NullValueHandling = NullValueHandling.Ignore)]
        public long? O { get; set; }

        [JsonProperty("oc", NullValueHandling = NullValueHandling.Ignore)]
        public string Oc { get; set; }

        [JsonProperty("a", NullValueHandling = NullValueHandling.Ignore)]
        public string A { get; set; }

        [JsonProperty("co", NullValueHandling = NullValueHandling.Ignore)]
        public string Co { get; set; }

        [JsonProperty("f", NullValueHandling = NullValueHandling.Ignore)]
        public string F { get; set; }

        [JsonProperty("p", NullValueHandling = NullValueHandling.Ignore)]
        public long? P { get; set; }

        [JsonProperty("pc", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc { get; set; }

        [JsonProperty("b", NullValueHandling = NullValueHandling.Ignore)]
        public long? B { get; set; }

        [JsonProperty("bc", NullValueHandling = NullValueHandling.Ignore)]
        public string Bc { get; set; }

        [JsonProperty("m", NullValueHandling = NullValueHandling.Ignore)]
        public long? M { get; set; }

        [JsonProperty("mc", NullValueHandling = NullValueHandling.Ignore)]
        public string Mc { get; set; }

        [JsonProperty("mm", NullValueHandling = NullValueHandling.Ignore)]
        public string Mm { get; set; }

        [JsonProperty("mmc", NullValueHandling = NullValueHandling.Ignore)]
        public string Mmc { get; set; }

        [JsonProperty("i", NullValueHandling = NullValueHandling.Ignore)]
        public long? I { get; set; }

        [JsonProperty("e", NullValueHandling = NullValueHandling.Ignore)]
        public string E { get; set; }

        [JsonProperty("ec", NullValueHandling = NullValueHandling.Ignore)]
        public string Ec { get; set; }

        [JsonProperty("k", NullValueHandling = NullValueHandling.Ignore)]
        public long? K { get; set; }

        [JsonProperty("kc", NullValueHandling = NullValueHandling.Ignore)]
        public string Kc { get; set; }

        [JsonProperty("c", NullValueHandling = NullValueHandling.Ignore)]
        public string C { get; set; }

        [JsonProperty("cc", NullValueHandling = NullValueHandling.Ignore)]
        public string Cc { get; set; }

        [JsonProperty("r", NullValueHandling = NullValueHandling.Ignore)]
        public string R { get; set; }

        [JsonProperty("rc", NullValueHandling = NullValueHandling.Ignore)]
        public string Rc { get; set; }

        [JsonProperty("j", NullValueHandling = NullValueHandling.Ignore)]
        public long? J { get; set; }

        [JsonProperty("jc", NullValueHandling = NullValueHandling.Ignore)]
        public string Jc { get; set; }

        [JsonProperty("jj", NullValueHandling = NullValueHandling.Ignore)]
        public long? Jj { get; set; }

        [JsonProperty("jjc", NullValueHandling = NullValueHandling.Ignore)]
        public string Jjc { get; set; }

        [JsonProperty("x", NullValueHandling = NullValueHandling.Ignore)]
        public string X { get; set; }

        [JsonProperty("xc", NullValueHandling = NullValueHandling.Ignore)]
        public string Xc { get; set; }

        [JsonProperty("xx", NullValueHandling = NullValueHandling.Ignore)]
        public string Xx { get; set; }

        [JsonProperty("xxc", NullValueHandling = NullValueHandling.Ignore)]
        public string Xxc { get; set; }

        [JsonProperty("nc", NullValueHandling = NullValueHandling.Ignore)]
        public string Nc { get; set; }

        [JsonProperty("nd", NullValueHandling = NullValueHandling.Ignore)]
        public long? Nd { get; set; }

        [JsonProperty("ndc", NullValueHandling = NullValueHandling.Ignore)]
        public string Ndc { get; set; }

        [JsonProperty("nn", NullValueHandling = NullValueHandling.Ignore)]
        public long? Nn { get; set; }

        [JsonProperty("nnc", NullValueHandling = NullValueHandling.Ignore)]
        public string Nnc { get; set; }

        [JsonProperty("rr", NullValueHandling = NullValueHandling.Ignore)]
        public string Rr { get; set; }

        [JsonProperty("rrc", NullValueHandling = NullValueHandling.Ignore)]
        public string Rrc { get; set; }

        [JsonProperty("d", NullValueHandling = NullValueHandling.Ignore)]
        public long? D { get; set; }

        [JsonProperty("dm", NullValueHandling = NullValueHandling.Ignore)]
        public long? Dm { get; set; }

        [JsonProperty("dc", NullValueHandling = NullValueHandling.Ignore)]
        public string Dc { get; set; }

        [JsonProperty("l", NullValueHandling = NullValueHandling.Ignore)]
        public long? L { get; set; }

        [JsonProperty("lc", NullValueHandling = NullValueHandling.Ignore)]
        public string Lc { get; set; }

        [JsonProperty("y", NullValueHandling = NullValueHandling.Ignore)]
        public long? Y { get; set; }

        [JsonProperty("yc", NullValueHandling = NullValueHandling.Ignore)]
        public string Yc { get; set; }

        [JsonProperty("sv", NullValueHandling = NullValueHandling.Ignore)]
        public string Sv { get; set; }

        [JsonProperty("svc", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Svc { get; set; }

        [JsonProperty("ss", NullValueHandling = NullValueHandling.Ignore)]
        public string Ss { get; set; }

        [JsonProperty("ssc", NullValueHandling = NullValueHandling.Ignore)]
        public string Ssc { get; set; }

        [JsonProperty("adm", NullValueHandling = NullValueHandling.Ignore)]
        public long? Adm { get; set; }

        [JsonProperty("admc", NullValueHandling = NullValueHandling.Ignore)]
        public string Admc { get; set; }

        [JsonProperty("p0", NullValueHandling = NullValueHandling.Ignore)]
        public long? P0 { get; set; }

        [JsonProperty("pc0", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc0 { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public long? P1 { get; set; }

        [JsonProperty("pc1", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public long? P2 { get; set; }

        [JsonProperty("pc2", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc2 { get; set; }

        [JsonProperty("p3", NullValueHandling = NullValueHandling.Ignore)]
        public long? P3 { get; set; }

        [JsonProperty("pc3", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc3 { get; set; }

        [JsonProperty("p4", NullValueHandling = NullValueHandling.Ignore)]
        public long? P4 { get; set; }

        [JsonProperty("pc4", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc4 { get; set; }

        [JsonProperty("p5", NullValueHandling = NullValueHandling.Ignore)]
        public long? P5 { get; set; }

        [JsonProperty("pc5", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc5 { get; set; }

        [JsonProperty("p6", NullValueHandling = NullValueHandling.Ignore)]
        public long? P6 { get; set; }

        [JsonProperty("pc6", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc6 { get; set; }

        [JsonProperty("p7", NullValueHandling = NullValueHandling.Ignore)]
        public long? P7 { get; set; }

        [JsonProperty("pc7", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc7 { get; set; }

        [JsonProperty("p8", NullValueHandling = NullValueHandling.Ignore)]
        public long? P8 { get; set; }

        [JsonProperty("pc8", NullValueHandling = NullValueHandling.Ignore)]
        public string Pc8 { get; set; }
    }

    public partial class SystemData
    {
        public static Dictionary<string, SystemData> FromJson(string json) => JsonConvert.DeserializeObject<Dictionary<string, SystemData>>(json, Dotlan.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Dictionary<string, SystemData> self) => JsonConvert.SerializeObject(self, Dotlan.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
